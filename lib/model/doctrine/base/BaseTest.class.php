<?php

/**
 * BaseTest
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property set $value_first
 * @property enum $value_enum
 * @property Doctrine_Collection $TestItem
 * 
 * @method string              getTitle()       Returns the current record's "title" value
 * @method set                 getValueFirst()  Returns the current record's "value_first" value
 * @method enum                getValueEnum()   Returns the current record's "value_enum" value
 * @method Doctrine_Collection getTestItem()    Returns the current record's "TestItem" collection
 * @method Test                setTitle()       Sets the current record's "title" value
 * @method Test                setValueFirst()  Sets the current record's "value_first" value
 * @method Test                setValueEnum()   Sets the current record's "value_enum" value
 * @method Test                setTestItem()    Sets the current record's "TestItem" collection
 * 
 * @package    sf
 * @subpackage model
 * @author     Atma
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTest extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('test');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('value_first', 'set', null, array(
             'type' => 'set',
             'values' => 
             array(
              'first' => 'Первый',
              'second' => 'Второй',
             ),
             ));
        $this->hasColumn('value_enum', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              'first' => 'Первый',
              'second' => 'Второй',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('TestItem', array(
             'local' => 'id',
             'foreign' => 'test_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}
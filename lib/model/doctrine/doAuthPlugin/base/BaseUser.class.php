<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $username
 * @property string $fname
 * @property string $iname
 * @property string $oname
 * @property string $image
 * @property string $email
 * @property string $salt
 * @property string $password
 * @property boolean $gender
 * @property timestamp $birth_date
 * @property boolean $is_active
 * @property boolean $is_super_admin
 * @property timestamp $last_login
 * @property Doctrine_Collection $UserPermissions
 * @property Doctrine_Collection $UserGroup
 * @property Doctrine_Collection $UserGroupUsers
 * @property Doctrine_Collection $UserLog
 * 
 * @method string              getUsername()        Returns the current record's "username" value
 * @method string              getFname()           Returns the current record's "fname" value
 * @method string              getIname()           Returns the current record's "iname" value
 * @method string              getOname()           Returns the current record's "oname" value
 * @method string              getImage()           Returns the current record's "image" value
 * @method string              getEmail()           Returns the current record's "email" value
 * @method string              getSalt()            Returns the current record's "salt" value
 * @method string              getPassword()        Returns the current record's "password" value
 * @method boolean             getGender()          Returns the current record's "gender" value
 * @method timestamp           getBirthDate()       Returns the current record's "birth_date" value
 * @method boolean             getIsActive()        Returns the current record's "is_active" value
 * @method boolean             getIsSuperAdmin()    Returns the current record's "is_super_admin" value
 * @method timestamp           getLastLogin()       Returns the current record's "last_login" value
 * @method Doctrine_Collection getUserPermissions() Returns the current record's "UserPermissions" collection
 * @method Doctrine_Collection getUserGroup()       Returns the current record's "UserGroup" collection
 * @method Doctrine_Collection getUserGroupUsers()  Returns the current record's "UserGroupUsers" collection
 * @method Doctrine_Collection getUserLog()         Returns the current record's "UserLog" collection
 * @method User                setUsername()        Sets the current record's "username" value
 * @method User                setFname()           Sets the current record's "fname" value
 * @method User                setIname()           Sets the current record's "iname" value
 * @method User                setOname()           Sets the current record's "oname" value
 * @method User                setImage()           Sets the current record's "image" value
 * @method User                setEmail()           Sets the current record's "email" value
 * @method User                setSalt()            Sets the current record's "salt" value
 * @method User                setPassword()        Sets the current record's "password" value
 * @method User                setGender()          Sets the current record's "gender" value
 * @method User                setBirthDate()       Sets the current record's "birth_date" value
 * @method User                setIsActive()        Sets the current record's "is_active" value
 * @method User                setIsSuperAdmin()    Sets the current record's "is_super_admin" value
 * @method User                setLastLogin()       Sets the current record's "last_login" value
 * @method User                setUserPermissions() Sets the current record's "UserPermissions" collection
 * @method User                setUserGroup()       Sets the current record's "UserGroup" collection
 * @method User                setUserGroupUsers()  Sets the current record's "UserGroupUsers" collection
 * @method User                setUserLog()         Sets the current record's "UserLog" collection
 * 
 * @package    sf
 * @subpackage model
 * @author     Atma
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 128,
             ));
        $this->hasColumn('fname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('iname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('oname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('salt', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('gender', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('birth_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));


        $this->index('name_idx', array(
             'fields' => 
             array(
              0 => 'username',
             ),
             'unique' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Permission as UserPermissions', array(
             'refClass' => 'UserPermissions',
             'local' => 'user_id',
             'foreign' => 'permission_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('UserGroup', array(
             'refClass' => 'UserGroupUsers',
             'local' => 'user_id',
             'foreign' => 'user_group_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('UserGroupUsers', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserLog', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}